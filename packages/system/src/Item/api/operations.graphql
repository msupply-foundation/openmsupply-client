fragment ItemRow on ItemNode {
  __typename
  id
  code
  name
  unitName
}

fragment Item on ItemNode {
  __typename
  availableBatches(storeId: $storeId) {
    __typename
    ... on StockLineConnector {
      __typename
      nodes {
        __typename
        availableNumberOfPacks
        batch
        costPricePerPack
        expiryDate
        id
        itemId
        packSize
        sellPricePerPack
        totalNumberOfPacks
        onHold
        note
        storeId
        locationName
      }
      totalCount
    }
  }
  stats(storeId: $storeId) {
    __typename
    averageMonthlyConsumption
    availableStockOnHand
    availableMonthsOfStockOnHand
  }
  code
  id
  isVisible
  name
  unitName
}

query itemsWithStockLines(
  $first: Int
  $offset: Int
  $key: ItemSortFieldInput!
  $desc: Boolean
  $filter: ItemFilterInput
  $storeId: String!
) {
  items(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ItemConnector {
      __typename
      nodes {
        ...Item
      }
      totalCount
    }
  }
}

query itemsListView(
  $first: Int
  $offset: Int
  $key: ItemSortFieldInput!
  $desc: Boolean
  $filter: ItemFilterInput
) {
  items(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ItemConnector {
      __typename
      nodes {
        ...ItemRow
      }
      totalCount
    }
  }
}
