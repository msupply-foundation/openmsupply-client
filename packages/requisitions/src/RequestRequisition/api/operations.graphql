fragment ItemWithStats on ItemNode {
  id
  name
  code
  unitName
  stats(storeId: $storeId) {
    averageMonthlyConsumption
    availableStockOnHand
    availableMonthsOfStockOnHand
  }
}

mutation insertRequestRequisition(
  $storeId: String!
  $input: InsertRequestRequisitionInput!
) {
  insertRequestRequisition(input: $input, storeId: $storeId) {
    ... on RequisitionNode {
      __typename
      id
      requisitionNumber
    }
  }
}

mutation updateRequestRequisition(
  $storeId: String!
  $input: UpdateRequestRequisitionInput!
) {
  updateRequestRequisition(input: $input, storeId: $storeId) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

mutation deleteRequestRequisition(
  $storeId: String!
  $input: DeleteRequestRequisitionInput!
) {
  deleteRequestRequisition(input: $input, storeId: $storeId) {
    ... on DeleteResponse {
      __typename
      id
    }
    ... on DeleteRequestRequisitionError {
      __typename
      error {
        description
        ... on CannotDeleteRequisitionWithLines {
          __typename
          description
        }
        ... on CannotEditRequisition {
          __typename
          description
        }
        ... on RecordDoesNotExist {
          __typename
          description
        }
      }
    }
  }
}

fragment RequestRequisitionLine on RequisitionLineNode {
  id
  itemId
  requestedQuantity
  suggestedQuantity
  itemStats {
    __typename
    availableStockOnHand
    availableMonthsOfStockOnHand
    averageMonthlyConsumption
  }
  item {
    ...ItemWithStats
  }
}

fragment RequestRequisition on RequisitionNode {
  __typename
  id
  type
  status
  createdDatetime
  sentDatetime
  finalisedDatetime
  requisitionNumber
  colour
  theirReference
  comment
  otherPartyName
  otherPartyId
  maxMonthsOfStock
  minMonthsOfStock
  lines {
    __typename

    totalCount
    nodes {
      ...RequestRequisitionLine
    }
  }
  otherParty {
    id
    code
    isCustomer
    isSupplier
    name
    store {
      id
      code
    }
  }
}
query requestRequisition($storeId: String!, $requisitionNumber: Int!) {
  requisitionByNumber(
    requisitionNumber: $requisitionNumber
    type: REQUEST
    storeId: $storeId
  ) {
    __typename
    ... on RequisitionNode {
      ...RequestRequisition
      otherParty {
        __typename
        ... on NameNode {
          id
          name
          code
          isCustomer
          isSupplier
        }
      }
    }
  }
}

fragment RequestRequisitionRow on RequisitionNode {
  colour
  comment
  createdDatetime
  finalisedDatetime
  id
  otherPartyName
  requisitionNumber
  sentDatetime
  status
  theirReference
  type
  otherPartyId
}

query requestRequisitions(
  $storeId: String!
  $filter: RequisitionFilterInput
  $page: PaginationInput
  $sort: [RequisitionSortInput!]
) {
  requisitions(storeId: $storeId, filter: $filter, page: $page, sort: $sort) {
    ... on RequisitionConnector {
      totalCount
      nodes {
        ...RequestRequisitionRow
      }
    }
  }
}

mutation insertRequestRequisitionLine(
  $storeId: String!
  $input: InsertRequestRequisitionLineInput!
) {
  insertRequestRequisitionLine(input: $input, storeId: $storeId) {
    ... on RequisitionLineNode {
      __typename
      id
    }
    ... on InsertRequestRequisitionLineError {
      __typename
      error {
        description
        ... on CannotEditRequisition {
          __typename
          description
        }
        ... on ForeignKeyError {
          __typename
          description
          key
        }
        ... on RequisitionLineWithItemIdExists {
          __typename
          description
        }
      }
    }
  }
}

mutation updateRequestRequisitionLine(
  $storeId: String!
  $input: UpdateRequestRequisitionLineInput!
) {
  updateRequestRequisitionLine(input: $input, storeId: $storeId) {
    ... on RequisitionLineNode {
      __typename
      id
    }
    ... on UpdateResponseRequisitionLineError {
      __typename
      error {
        description
        ... on CannotEditRequisition {
          __typename
          description
        }
        ... on ForeignKeyError {
          __typename
          description
          key
        }
        ... on RecordDoesNotExist {
          __typename
          description
        }
      }
    }
  }
}
