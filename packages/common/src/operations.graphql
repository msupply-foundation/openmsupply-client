query locations($storeId: String!, $sort: [LocationSortInput!]) {
  locations(storeId: $storeId, sort: $sort) {
    __typename
    ... on LocationConnector {
      __typename
      totalCount
      nodes {
        __typename
        id
        name
        onHold
        code
      }
    }
  }
}

mutation insertLocation($input: InsertLocationInput!, $storeId: String!) {
  insertLocation(input: $input, storeId: $storeId) {
    ... on InsertLocationError {
      __typename
      error {
        description
        ... on InternalError {
          __typename
          description
          fullError
        }
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordAlreadyExist {
          __typename
          description
        }
        ... on UniqueValueViolation {
          __typename
          description
          field
        }
      }
    }
    ... on LocationNode {
      id
      name
      code
      onHold
    }
  }
}

mutation updateLocation($input: UpdateLocationInput!, $storeId: String!) {
  updateLocation(input: $input, storeId: $storeId) {
    ... on UpdateLocationError {
      __typename
      error {
        description
        ... on InternalError {
          __typename
          description
          fullError
        }
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordBelongsToAnotherStore {
          __typename
          description
        }
        ... on RecordNotFound {
          __typename
          description
        }
        ... on UniqueValueViolation {
          __typename
          description
          field
        }
      }
    }
    ... on LocationNode {
      id
      name
      onHold
      code
    }
  }
}

mutation deleteLocation($storeId: String!, $input: DeleteLocationInput!) {
  deleteLocation(storeId: $storeId, input: $input) {
    ... on DeleteLocationError {
      __typename
      error {
        description
        ... on RecordNotFound {
          __typename
          description
        }
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordBelongsToAnotherStore {
          __typename
          description
        }
        ... on LocationInUse {
          __typename
          description
          stockLines {
            ... on StockLineConnector {
              __typename
              nodes {
                __typename
                id
                itemId
              }
              totalCount
            }
          }
          invoiceLines {
            ... on InvoiceLineConnector {
              __typename
              nodes {
                __typename
                id
              }
            }
            totalCount
          }
        }
      }
    }
    ... on DeleteResponse {
      __typename
      id
    }
  }
}

query authToken($username: String!, $password: String!) {
  authToken(password: $password, username: $username) {
    ... on AuthToken {
      __typename
      token
    }
    ... on AuthTokenError {
      __typename
      error {
        ... on UserNameDoesNotExist {
          __typename
          description
        }
        ... on InvalidCredentials {
          __typename
          description
        }
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on InternalError {
          __typename
          description
          fullError
        }
        description
      }
    }
  }
}

query masterLists(
  $first: Int
  $offset: Int
  $key: MasterListSortFieldInput!
  $desc: Boolean
  $filter: MasterListFilterInput
  $storeId: String!
) {
  masterLists(
    filter: $filter
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
  ) {
    ... on MasterListConnector {
      __typename
      totalCount
      nodes {
        name
        code
        description
        id
        lines {
          __typename
          totalCount
          nodes {
            id
            itemId
            item {
              code
              id
              unitName
              name
              isVisible
              availableBatches(storeId: $storeId) {
                __typename
                totalCount
                nodes {
                  __typename
                  availableNumberOfPacks
                  batch
                  costPricePerPack
                  expiryDate
                  itemId
                  id
                  totalNumberOfPacks
                  storeId
                  sellPricePerPack
                  packSize
                  onHold
                  note
                  locationName
                }
              }
            }
          }
        }
      }
    }
  }
}
