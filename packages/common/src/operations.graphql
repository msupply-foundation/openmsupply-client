query invoice($id: String!) {
  invoice(id: $id) {
    __typename
    ... on NodeError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordNotFound {
          __typename
          description
        }
      }
    }
    ... on InvoiceNode {
      __typename
      id
      comment
      createdDatetime
      allocatedDatetime
      deliveredDatetime
      pickedDatetime
      shippedDatetime
      verifiedDatetime
      invoiceNumber

      # enteredByName
      # donorName
      # requisitionNumber
      # purchaseOrderNumber
      # inboundShipmentNumber
      # goodsReceiptNumber
      color

      onHold

      otherParty {
        __typename
        ... on NameNode {
          __typename
          id
          name
          code
          isCustomer
          isSupplier
        }

        ... on NodeError {
          __typename
          error {
            description
            ... on DatabaseError {
              __typename
              description
              fullError
            }
            ... on RecordNotFound {
              __typename
              description
            }
          }
        }
      }

      lines {
        ... on ConnectorError {
          __typename
          error {
            description
            ... on DatabaseError {
              __typename
              description
              fullError
            }
          }
        }
        ... on InvoiceLineConnector {
          __typename
          nodes {
            __typename
            type
            batch
            costPricePerPack
            expiryDate
            id
            itemCode
            itemId
            itemName
            numberOfPacks
            packSize
            note
            invoiceId
            location {
              __typename
              ... on LocationNode {
                __typename
                id
                name
                code
                onHold
                stock {
                  __typename
                  ... on ConnectorError {
                    __typename
                    error {
                      description
                      ... on DatabaseError {
                        __typename
                        description
                        fullError
                      }
                    }
                  }
                  ... on StockLineConnector {
                    __typename
                    totalCount
                    nodes {
                      id
                      costPricePerPack
                      itemId
                      availableNumberOfPacks
                      onHold
                      packSize
                      sellPricePerPack
                      storeId
                      totalNumberOfPacks
                    }
                  }
                }
              }
              ... on NodeError {
                __typename
                error {
                  description
                  ... on DatabaseError {
                    __typename
                    description
                    fullError
                  }
                  ... on RecordNotFound {
                    __typename
                    description
                  }
                }
              }
            }
            item {
              ... on ItemNode {
                id
                name
                code
                isVisible
                availableBatches {
                  ... on StockLineConnector {
                    totalCount
                    nodes {
                      id
                      availableNumberOfPacks
                      costPricePerPack
                      itemId
                      onHold
                      packSize
                      sellPricePerPack
                      storeId
                      totalNumberOfPacks
                    }
                  }
                  ... on ConnectorError {
                    __typename
                    error {
                      description
                    }
                  }
                }
              }
              ... on ItemError {
                __typename
                error {
                  ... on InternalError {
                    __typename
                    description
                    fullError
                  }
                }
              }
            }

            # itemUnit
            locationName
            sellPricePerPack
            stockLine {
              __typename
              ... on NodeError {
                __typename
                error {
                  description
                  ... on DatabaseError {
                    __typename
                    description
                    fullError
                  }
                  ... on RecordNotFound {
                    __typename
                    description
                  }
                }
              }
              ... on StockLineNode {
                __typename
                availableNumberOfPacks
                batch
                costPricePerPack
                expiryDate
                id
                itemId
                packSize
                sellPricePerPack
                storeId
                totalNumberOfPacks
                onHold
                note
              }
            }
          }
          totalCount
        }
      }
      otherPartyId
      otherPartyName
      pricing {
        __typename
        ... on NodeError {
          __typename
          error {
            description
            ... on DatabaseError {
              __typename
              description
              fullError
            }
            ... on RecordNotFound {
              __typename
              description
            }
          }
        }
        ... on InvoicePricingNode {
          __typename
          totalAfterTax
          totalBeforeTax
          stockTotalBeforeTax
          stockTotalAfterTax
          serviceTotalAfterTax
          serviceTotalBeforeTax
        }
      }
      status
      theirReference
      type
    }
  }
}

query stocktake($stocktakeId: String!) {
  stocktake(id: $stocktakeId) {
    __typename
    ... on StocktakeNode {
      __typename
      id
      stocktakeNumber
      comment
      stocktakeDatetime
      status
      description
      entryDatetime
      enteredByName
      onHold
      lines {
        __typename

        ... on ConnectorError {
          __typename
          error {
            description
          }
        }

        ... on StocktakeLineConnector {
          __typename
          nodes {
            __typename
            batch
            itemCode
            itemName
            itemId
            id
            expiryDate
            packSize
            snapshotNumberOfPacks
            countedNumberOfPacks
            sellPricePerPack
            costPricePerPack
          }
          totalCount
        }
      }
    }
  }
}

mutation updateStocktake($input: UpdateStocktakeInput!) {
  updateStocktake(input: $input) {
    ... on StocktakeNode {
      __typename
      id
    }
  }
}

mutation upsertStocktakeLines(
  $deleteStocktakeLines: [DeleteStocktakeLineInput!]
  $insertStocktakeLines: [InsertStocktakeLineInput!]
  $updateStocktakeLines: [UpdateStocktakeLineInput!]
) {
  batchStocktake(
    deleteStocktakeLines: $deleteStocktakeLines
    insertStocktakeLines: $insertStocktakeLines
    updateStocktakeLines: $updateStocktakeLines
  ) {
    __typename
    updateStocktakes {
      __typename
      id
    }

    insertStocktakeLines {
      __typename
      id
    }

    deleteStocktakeLines {
      __typename
      id
    }

    updateStocktakeLines {
      __typename
      id
    }
  }
}

query stocktakes($params: StocktakeListParameters) {
  stocktakes(params: $params) {
    __typename
    ... on StocktakeConnector {
      nodes {
        id
        comment
        description
        stocktakeDatetime
        stocktakeNumber
        status
      }
      totalCount
    }
  }
}

mutation deleteStocktakes($ids: [DeleteStocktakeInput!]) {
  batchStocktake(deleteStocktakes: $ids) {
    __typename
    deleteStocktakes {
      __typename
      id
    }
  }
}

mutation updateStocktake($input: UpdateStocktakeInput!) {
  updateStocktake(input: $input) {
    ... on StocktakeNode {
      __typename
      id
    }
  }
}

mutation insertStocktake($input: InsertStocktakeInput!) {
  insertStocktake(input: $input) {
    ... on StocktakeNode {
      __typename
      id
    }
  }
}

query requisitions($params: RequisitionListParameters) {
  requisitions(params: $params) {
    __typename
    ... on RequisitionConnector {
      nodes {
        id
        comment
        orderDate
        theirReference
        requisitionNumber
        status
        otherPartyName
        otherPartyId
        color
      }
      totalCount
    }

    ... on ConnectorError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
      }
    }
  }
}

mutation deleteSupplierRequisitions($ids: [DeleteSupplierRequisitionInput!]) {
  batchSupplierRequisition(deleteSupplierRequisitions: $ids) {
    __typename
    deleteSupplierRequisitions {
      __typename
      id
    }
  }
}

mutation updateSupplierRequisition($input: UpdateSupplierRequisitionInput!) {
  updateSupplierRequisition(input: $input) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

mutation insertSupplierRequisition($input: InsertSupplierRequisitionInput!) {
  insertSupplierRequisition(input: $input) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

mutation deleteCustomerRequisitions($ids: [DeleteCustomerRequisitionInput!]) {
  batchCustomerRequisition(deleteCustomerRequisitions: $ids) {
    __typename
    deleteCustomerRequisitions {
      __typename
      id
    }
  }
}

mutation updateCustomerRequisition($input: UpdateCustomerRequisitionInput!) {
  updateCustomerRequisition(input: $input) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

mutation insertCustomerRequisition($input: InsertCustomerRequisitionInput!) {
  insertCustomerRequisition(input: $input) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

mutation deleteCustomerRequisitions($ids: [DeleteCustomerRequisitionInput!]) {
  batchCustomerRequisition(deleteCustomerRequisitions: $ids) {
    __typename
    deleteCustomerRequisitions {
      __typename
      id
    }
  }
}

mutation updateCustomerRequisition($input: UpdateCustomerRequisitionInput!) {
  updateCustomerRequisition(input: $input) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

mutation insertCustomerRequisition($input: InsertCustomerRequisitionInput!) {
  insertCustomerRequisition(input: $input) {
    ... on RequisitionNode {
      __typename
      id
    }
  }
}

query requisition($id: String!) {
  requisition(id: $id) {
    __typename
    ... on RequisitionNode {
      __typename
      id
      orderDate
      requisitionDate
      comment
      theirReference
      type
      requisitionNumber
      thresholdMOS
      maxMOS
      status
      otherPartyId
      lines {
        __typename
        ... on ConnectorError {
          error {
            description
          }
        }
        ... on RequisitionLineConnector {
          totalCount
          nodes {
            id
            itemName
            itemCode
            itemUnit
            itemId
            comment
            monthlyConsumption
            monthsOfSupply
            supplyQuantity
            openingQuantity
            issuedQuantity
            requestedQuantity
            receivedQuantity
            imprestQuantity
            previousQuantity
            calculatedQuantity
            previousStockOnHand
            closingQuantity
            stockAdditions
            stockLosses
            expiredQuantity
            otherPartyClosingQuantity
          }
        }
      }
      otherParty {
        __typename
        ... on NodeError {
          error {
            description
          }
        }
        ... on NameNode {
          id
          name
          code
          isCustomer
          isSupplier
        }
      }
    }
  }
}

mutation upsertSupplierRequisition(
  $deleteSupplierRequisitionLines: [DeleteSupplierRequisitionLineInput!]
  $insertSupplierRequisitionLines: [InsertSupplierRequisitionLineInput!]
  $updateSupplierRequisitionLines: [UpdateSupplierRequisitionLineInput!]
  $updateSupplierRequisitions: [UpdateSupplierRequisitionInput!]
) {
  batchSupplierRequisition(
    deleteSupplierRequisitionLines: $deleteSupplierRequisitionLines
    insertSupplierRequisitionLines: $insertSupplierRequisitionLines
    updateSupplierRequisitionLines: $updateSupplierRequisitionLines
    updateSupplierRequisitions: $updateSupplierRequisitions
  ) {
    __typename
    updateSupplierRequisitions {
      __typename
      id
    }

    insertSupplierRequisitionLines {
      __typename
      id
    }

    deleteSupplierRequisitionLines {
      __typename
      id
    }

    updateSupplierRequisitionLines {
      __typename
      id
    }
  }
}

mutation upsertCustomerRequisition(
  $deleteCustomerRequisitionLines: [DeleteCustomerRequisitionLineInput!]
  $insertCustomerRequisitionLines: [InsertCustomerRequisitionLineInput!]
  $updateCustomerRequisitionLines: [UpdateCustomerRequisitionLineInput!]
  $updateCustomerRequisitions: [UpdateCustomerRequisitionInput!]
) {
  batchCustomerRequisition(
    deleteCustomerRequisitionLines: $deleteCustomerRequisitionLines
    insertCustomerRequisitionLines: $insertCustomerRequisitionLines
    updateCustomerRequisitionLines: $updateCustomerRequisitionLines
    updateCustomerRequisitions: $updateCustomerRequisitions
  ) {
    __typename
    updateCustomerRequisitions {
      __typename
      id
    }

    insertCustomerRequisitionLines {
      __typename
      id
    }

    deleteCustomerRequisitionLines {
      __typename
      id
    }

    updateCustomerRequisitionLines {
      __typename
      id
    }
  }
}

query invoices(
  $first: Int
  $offset: Int
  $key: InvoiceSortFieldInput!
  $desc: Boolean
  $filter: InvoiceFilterInput
) {
  invoices(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ConnectorError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on PaginationError {
          __typename
          description
          rangeError {
            description
            field
            max
            min
          }
        }
      }
    }
    ... on InvoiceConnector {
      __typename
      nodes {
        comment
        createdDatetime
        allocatedDatetime
        deliveredDatetime
        pickedDatetime
        shippedDatetime
        verifiedDatetime
        id
        invoiceNumber
        otherPartyId
        otherPartyName
        theirReference
        type
        status
        color

        pricing {
          __typename
          ... on NodeError {
            __typename
            error {
              ... on RecordNotFound {
                __typename
                description
              }
              ... on DatabaseError {
                __typename
                description
                fullError
              }
              description
            }
          }
          ... on InvoicePricingNode {
            __typename
            totalAfterTax
            totalBeforeTax
            stockTotalBeforeTax
            stockTotalAfterTax
            serviceTotalAfterTax
            serviceTotalBeforeTax
          }
        }
      }
      totalCount
    }
  }
}

query names(
  $key: NameSortFieldInput!
  $desc: Boolean
  $first: Int
  $offset: Int
  $filter: NameFilterInput
) {
  names(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ConnectorError {
      __typename
      error {
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        description
        ... on PaginationError {
          __typename
          description
          rangeError {
            description
            field
            max
            min
          }
        }
      }
    }
    ... on NameConnector {
      __typename
      nodes {
        code
        id
        isCustomer
        isSupplier
        name
      }
      totalCount
    }
  }
}

query itemsWithStockLines(
  $first: Int
  $offset: Int
  $key: ItemSortFieldInput!
  $desc: Boolean
  $filter: ItemFilterInput
) {
  items(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ConnectorError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on PaginationError {
          __typename
          description
          rangeError {
            description
            field
            max
            min
          }
        }
      }
    }
    ... on ItemConnector {
      __typename
      nodes {
        __typename
        # availableQuantity

        availableBatches {
          __typename
          ... on ConnectorError {
            __typename
            error {
              description
              ... on DatabaseError {
                __typename
                description
                fullError
              }
              ... on PaginationError {
                __typename
                description
                rangeError {
                  description
                  field
                  max
                  min
                }
              }
            }
          }
          ... on StockLineConnector {
            __typename
            nodes {
              __typename
              availableNumberOfPacks
              batch
              costPricePerPack
              expiryDate
              id
              itemId
              packSize
              sellPricePerPack
              totalNumberOfPacks
              onHold
              note
              storeId
            }
            totalCount
          }
        }
        code
        id
        isVisible
        name
        unitName
      }
      totalCount
    }
  }
}

query itemsListView(
  $first: Int
  $offset: Int
  $key: ItemSortFieldInput!
  $desc: Boolean
  $filter: ItemFilterInput
) {
  items(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ConnectorError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on PaginationError {
          __typename
          description
          rangeError {
            description
            field
            max
            min
          }
        }
      }
    }
    ... on ItemConnector {
      __typename
      nodes {
        __typename
        # availableQuantity
        code
        id
        isVisible
        name
        unitName
      }
      totalCount
    }
  }
}

mutation insertOutboundShipment($id: String!, $otherPartyId: String!) {
  insertOutboundShipment(input: { id: $id, otherPartyId: $otherPartyId }) {
    __typename
    ... on InvoiceNode {
      id
    }
    ... on InsertOutboundShipmentError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on ForeignKeyError {
          __typename
          description
          key
        }
        ... on OtherPartyCannotBeThisStoreError {
          __typename
          description
        }
        ... on OtherPartyNotACustomerError {
          __typename
          description
          otherParty {
            code
            id
            isCustomer
            isSupplier
            name
          }
        }
        ... on RecordAlreadyExist {
          __typename
          description
        }
      }
    }
    ... on NodeError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordNotFound {
          __typename
          description
        }
      }
    }
  }
}

mutation updateOutboundShipment($input: UpdateOutboundShipmentInput!) {
  updateOutboundShipment(input: $input) {
    ... on InvoiceNode {
      __typename
      id
    }
    ... on NodeError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordNotFound {
          __typename
          description
        }
      }
    }
    ... on UpdateOutboundShipmentError {
      __typename
      error {
        description
      }
    }
  }
}

mutation deleteOutboundShipments($ids: [String!]) {
  batchOutboundShipment(deleteOutboundShipments: $ids) {
    __typename
    deleteOutboundShipments {
      __typename
      id
    }
  }
}

query invoiceCounts($timezoneOffset: Int) {
  invoiceCounts(timezoneOffset: $timezoneOffset) {
    outbound {
      created {
        today
        thisWeek
      }
      toBePicked
    }
    inbound {
      created {
        today
        thisWeek
      }
    }
  }
}

query stockCounts($daysTillExpired: Int, $timezoneOffset: Int) {
  stockCounts(
    daysTillExpired: $daysTillExpired
    timezoneOffset: $timezoneOffset
  ) {
    expired
    expiringSoon
  }
}

mutation upsertOutboundShipment(
  $deleteOutboundShipmentLines: [DeleteOutboundShipmentLineInput!]
  $insertOutboundShipmentLines: [InsertOutboundShipmentLineInput!]
  $updateOutboundShipmentLines: [UpdateOutboundShipmentLineInput!]
  $updateOutboundShipments: [UpdateOutboundShipmentInput!]
) {
  batchOutboundShipment(
    deleteOutboundShipmentLines: $deleteOutboundShipmentLines
    insertOutboundShipmentLines: $insertOutboundShipmentLines
    updateOutboundShipmentLines: $updateOutboundShipmentLines
    updateOutboundShipments: $updateOutboundShipments
  ) {
    __typename
    insertOutboundShipmentLines {
      __typename
      id
    }
    updateOutboundShipments {
      __typename
      id
    }
    deleteOutboundShipmentLines {
      __typename
      id
    }
    updateOutboundShipmentLines {
      __typename
      id
    }
  }
}

mutation deleteInboundShipmentLines($input: [DeleteInboundShipmentLineInput!]) {
  batchInboundShipment(deleteInboundShipmentLines: $input) {
    deleteInboundShipmentLines {
      id
      response {
        ... on DeleteInboundShipmentLineError {
          __typename
          error {
            description
          }
        }
        ... on DeleteResponse {
          id
        }
      }
    }
  }
}

mutation upsertInboundShipment(
  $deleteInboundShipmentLines: [DeleteInboundShipmentLineInput!]
  $insertInboundShipmentLines: [InsertInboundShipmentLineInput!]
  $updateInboundShipmentLines: [UpdateInboundShipmentLineInput!]
  $updateInboundShipments: [UpdateInboundShipmentInput!]
) {
  batchInboundShipment(
    deleteInboundShipmentLines: $deleteInboundShipmentLines
    insertInboundShipmentLines: $insertInboundShipmentLines
    updateInboundShipmentLines: $updateInboundShipmentLines
    updateInboundShipments: $updateInboundShipments
  ) {
    __typename
    updateInboundShipments {
      __typename
      id
    }

    insertInboundShipmentLines {
      __typename
      id
    }

    deleteInboundShipmentLines {
      __typename
      id
    }

    updateInboundShipmentLines {
      __typename
      id
    }
  }
}

mutation updateInboundShipment($input: UpdateInboundShipmentInput!) {
  updateInboundShipment(input: $input) {
    ... on InvoiceNode {
      __typename
      id
    }
    ... on NodeError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordNotFound {
          __typename
          description
        }
      }
    }
    ... on UpdateInboundShipmentError {
      __typename
      error {
        description
      }
    }
  }
}

mutation deleteInboundShipments($ids: [DeleteInboundShipmentInput!]) {
  batchInboundShipment(deleteInboundShipments: $ids) {
    __typename
    deleteInboundShipments {
      __typename
      id
    }
  }
}

mutation insertInboundShipment($id: String!, $otherPartyId: String!) {
  insertInboundShipment(input: { id: $id, otherPartyId: $otherPartyId }) {
    __typename
    ... on InvoiceNode {
      id
    }
    ... on InsertInboundShipmentError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on ForeignKeyError {
          __typename
          description
          key
        }

        ... on OtherPartyNotASupplier {
          __typename
          description
          otherParty {
            code
            id
            isCustomer
            isSupplier
            name
          }
        }
        ... on RecordAlreadyExist {
          __typename
          description
        }
      }
    }
    ... on NodeError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordNotFound {
          __typename
          description
        }
      }
    }
  }
}

query locations($sort: [LocationSortInput!]) {
  locations(sort: $sort) {
    __typename
    ... on LocationConnector {
      __typename
      nodes {
        __typename
        id
        name
        onHold
        code
      }
      totalCount
    }
    ... on ConnectorError {
      __typename
      error {
        description
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on PaginationError {
          __typename
          description
          rangeError {
            description
            field
            max
            min
          }
        }
      }
    }
  }
}

mutation insertLocation($input: InsertLocationInput!) {
  insertLocation(input: $input) {
    ... on InsertLocationError {
      __typename
      error {
        description
        ... on InternalError {
          __typename
          description
          fullError
        }
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordAlreadyExist {
          __typename
          description
        }
        ... on UniqueValueViolation {
          __typename
          description
          field
        }
      }
    }
    ... on LocationNode {
      id
      name
      code
      onHold
    }
  }
}

mutation updateLocation($input: UpdateLocationInput!) {
  updateLocation(input: $input) {
    ... on UpdateLocationError {
      __typename
      error {
        description
        ... on InternalError {
          __typename
          description
          fullError
        }
        ... on DatabaseError {
          __typename
          description
          fullError
        }
        ... on RecordBelongsToAnotherStore {
          __typename
          description
        }
        ... on RecordNotFound {
          __typename
          description
        }
        ... on UniqueValueViolation {
          __typename
          description
          field
        }
      }
    }
    ... on LocationNode {
      id
      name
      onHold
      code
    }
  }
}
