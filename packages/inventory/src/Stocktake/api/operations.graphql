fragment StocktakeRow on StocktakeNode {
  __typename
  id
  comment
  description
  createdDatetime
  finalisedDatetime
  stocktakeNumber
  status
}

fragment StocktakeLine on StocktakeLineNode {
  __typename
  stocktakeId
  batch
  itemId
  id
  expiryDate
  packSize
  snapshotNumberOfPacks
  countedNumberOfPacks
  sellPricePerPack
  costPricePerPack
  stockLine {
    id
  }
  item {
    id
    code
    name
  }
}

fragment Stocktake on StocktakeNode {
  __typename
  id
  stocktakeNumber
  comment
  createdDatetime
  finalisedDatetime
  status
  description
  lines {
    __typename
    ... on StocktakeLineConnector {
      __typename
      nodes {
        ...StocktakeLine
      }
      totalCount
    }
  }
}

query stocktakes(
  $storeId: String!
  $filter: StocktakeFilterInput
  $page: PaginationInput
  $sort: [StocktakeSortInput!]
) {
  stocktakes(storeId: $storeId, filter: $filter, page: $page, sort: $sort) {
    __typename
    ... on StocktakeConnector {
      nodes {
        ...StocktakeRow
      }
      totalCount
    }
  }
}

query stocktake($stocktakeId: String!, $storeId: String!) {
  stocktake(id: $stocktakeId, storeId: $storeId) {
    __typename
    ... on StocktakeNode {
      ...Stocktake
    }
  }
}

mutation upsertStocktakeLines(
  $storeId: String!
  $deleteStocktakeLines: [DeleteStocktakeLineInput!]
  $updateStocktakeLines: [UpdateStocktakeLineInput!]
  $insertStocktakeLines: [InsertStocktakeLineInput!]
) {
  batchStocktake(
    storeId: $storeId
    input: {
      deleteStocktakeLines: $deleteStocktakeLines
      updateStocktakeLines: $updateStocktakeLines
      insertStocktakeLines: $insertStocktakeLines
    }
  ) {
    __typename
    ... on BatchStocktakeResponses {
      __typename
      deleteStocktakeLines {
        id
      }
      insertStocktakeLines {
        id
      }
      updateStocktakeLines {
        id
      }
    }
  }
}

mutation deleteStocktakes($storeId: String!, $ids: [DeleteStocktakeInput!]) {
  batchStocktake(storeId: $storeId, input: { deleteStocktakes: $ids }) {
    __typename
    ... on BatchStocktakeResponses {
      deleteStocktakes {
        __typename
        id
      }
    }
  }
}

mutation updateStocktake($input: UpdateStocktakeInput!, $storeId: String!) {
  updateStocktake(input: $input, storeId: $storeId) {
    ... on StocktakeNode {
      __typename
      id
    }
  }
}

mutation insertStocktake($input: InsertStocktakeInput!, $storeId: String!) {
  insertStocktake(input: $input, storeId: $storeId) {
    ... on StocktakeNode {
      __typename
      id
    }
  }
}
